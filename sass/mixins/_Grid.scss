/* ==========================================================================
   Grid
   ========================================================================== */

/* Centered container element */
@mixin ContainerFixed() {
	margin-right: auto;
	margin-left: auto;
	padding-left:($grid-gutter-width / 2);
	padding-right: ($grid-gutter-width / 2);
	@include MicroClearfix();
}

/* Creates a wrapper for a series of columns */
@mixin MakeRow($gutter: $grid-gutter-width) {
	margin-left:  ($gutter / -2);
	margin-right: ($gutter / -2);

	// Then clear the floated columns
	@include MicroClearfix();
}

/* Generate the extra small columns */
@mixin MakeExtraSmallColumn($columns, $gutter: $grid-gutter-width) {
	position: relative;
	float: left;
	width: percentage(($columns / $grid-columns));

	/* Prevent columns from collapsing when empty */
	min-height: 1px;

	/* Inner gutter via padding */
	padding-left:($gutter / 2);
	padding-right: ($gutter / 2);
}

/* Generate the small columns */
@mixin MakeSmallColumn($columns, $gutter: $grid-gutter-width) {
	position: relative;
	/* Prevent columns from collapsing when empty */
	min-height: 1px;
	/* Inner gutter via padding */
	padding-left:($gutter / 2);
	padding-right: ($gutter / 2);

	/* Calculate width based on number of columns available */
	@media (min-width: $screen--small-min) {
		float: left;
		width: percentage(($columns / $grid-columns));
	}
}

/* Generate the small column offsets */
@mixin MakeSmallColumnOffset($columns) {
	@media (min-width: $screen--small-min) {
		margin-left: percentage(($columns / $grid-columns));
	}
}
@mixin MakeSmallColumnnPush($columns) {
	@media (min-width: $screen--small-min) {
		left: percentage(($columns / $grid-columns));
	}
}
@mixin MakeSmallColumnPull($columns) {
	@media (min-width: $screen--small-min) {
		right: percentage(($columns / $grid-columns));
	}
}

/* Generate the medium columns */
@mixin MakeMediumColumn($columns, $gutter: $grid-gutter-width) {
	position: relative;

	/* Prevent columns from collapsing when empty */
	min-height: 1px;

	/* Inner gutter via padding */
	padding-left:($gutter / 2);
	padding-right: ($gutter / 2);

	/* Calculate width based on number of columns available */
	@media (min-width: $screen--medium-min) {
		float: left;
		width: percentage(($columns / $grid-columns));
	}
}

/* Generate the medium column offsets */
@mixin MakeMediumColumnOffset($columns) {
	@media (min-width: $screen--medium-min) {
		margin-left: percentage(($columns / $grid-columns));
	}
}
@mixin MakeMediumColumnPush($columns) {
	@media (min-width: $screen--medium) {
		left: percentage(($columns / $grid-columns));
	}
}
@mixin MakeMediumColumnPull($columns) {
	@media (min-width: $screen--medium-min) {
		right: percentage(($columns / $grid-columns));
	}
}

/* Generate the large columns */
@mixin MakeLargeColumn($columns, $gutter: $grid-gutter-width) {
	position: relative;
	/* Prevent columns from collapsing when empty */
	min-height: 1px;
	/* Inner gutter via padding */
	padding-left:($gutter / 2);
	padding-right: ($gutter / 2);

	/* Calculate width based on number of columns available */
	@media (min-width: $screen--large-min) {
		float: left;
		width: percentage(($columns / $grid-columns));
	}
}

/* Generate the large column offsets */
@mixin MakeLargeColumnOffset($columns) {
	@media (min-width: $screen--large-min) {
		margin-left: percentage(($columns / $grid-columns));
	}
}
@mixin MakeLargeColumnPush($columns) {
	@media (min-width: $screen--large-min) {
		left: percentage(($columns / $grid-columns));
	}
}
@mixin MakeLargeColumnPull($columns) {
	@media (min-width: $screen--large-min) {
		right: percentage(($columns / $grid-columns));
	}
}
