/* ==========================================================================
   Navbar
   ========================================================================== */


/* Wrapper and base class
   ========================================================================== */

/**
 * Provide a static navbar from which we expand to create full-width, fixed, and
 * other navbar variations.
 */

.Navbar {
	position: relative;
	min-height: $navbar-height; /* Ensure a navbar always shows (e.g., without a .Navbar-brand in collapsed mode) */
	margin-bottom: $navbar-margin-bottom;
	border: 1px solid transparent;

	/* Prevent floats from breaking the navbar */
	@include MicroClearfix();

	@media (min-width: $grid-float-breakpoint) {
		border-radius: $navbar-border-radius;
	}
}


/* Navbar heading
   ========================================================================== */
/**
 * Groups `.Navbar-brand` and `.Navbar-toggle` into a single component for easy
 * styling of responsive aspects.
 */

.Navbar-header {
	@include MicroClearfix();

	@media (min-width: $grid-float-breakpoint) {
		float: left;
	}
}


/* Navbar collapse (body)
   ========================================================================== */
/**
 * Group your navbar content into this for easy collapsing and expanding across
 * various device sizes. By default, this content is collapsed when <768px, but
 * will expand past that for a horizontal display.
 *
 * To start (on mobile devices) the navbar links, forms, and buttons are stacked
 * vertically and include a `max-height` to overflow in case you have too much
 * content for the user's viewport.
 */

.Navbar-collapse {
	overflow-x: visible;
	padding-right: $navbar-padding-horizontal;
	padding-left: $navbar-padding-horizontal;
	border-top: 1px solid transparent;
	box-shadow: inset 0 1px 0 rgba(255,255,255,.1);
	@include MicroClearfix();
	-webkit-overflow-scrolling: touch;

	&.is-in {
		overflow-y: auto;
	}

	@media (min-width: $grid-float-breakpoint) {
		width: auto;
		border-top: 0;
		box-shadow: none;

		&.Animation--collapse {
			display: block !important;
			height: auto !important;
			padding-bottom: 0; /* Override default setting */
			overflow: visible !important;
		}

		&.is-in {
			overflow-y: visible;
		}

		// Undo the collapse side padding for navbars with containers to ensure
		// alignment of right-aligned contents.
		.Navbar--fixed--top &,
		.Navbar--static--top &,
		.Navbar--fixed--bottom & {
			padding-left: 0;
			padding-right: 0;
		}

		.Navbar--fixed--top,
		.Navbar--fixed--bottom {
			.Navbar-collapse {
				max-height: $navbar-collapse-max-height;

				@media (max-device-width: $screen--extraSmall-min) and (orientation: landscape) {
					max-height: 200px;
				}
			}
		}
	}
}


/* Both navbar header and collapse
   ========================================================================== */
/* When a container is present, change the behavior of the header and collapse. */

.Container > .Navbar-header,
.Container > .Navbar-collapse {
	margin-right: -$navbar-padding-horizontal;
	margin-left:  -$navbar-padding-horizontal;

	@media (min-width: $grid-float-breakpoint) {
		margin-right: 0;
		margin-left: 0;
	}
}



/* Navbar alignment options
   ========================================================================== */
/* Display the navbar across the entirity of the page or fixed it to the top or bottom of the page. */

/* Static top (unfixed, but 100% wide) navbar */
.Navbar--static--top {
	z-index: $zindex-navbar;
	border-width: 0 0 1px;

	@media (min-width: $grid-float-breakpoint) {
		border-radius: 0;
	}
}

/* Fix the top/bottom navbars when screen real estate supports it */
.Navbar--fixed--top,
.Navbar--fixed--bottom {
	position: fixed;
	right: 0;
	left: 0;
	border-width: 0 0 1px;
	transform: translate3d(0, 0, 0);

	/* Undo the rounded corners */
	@media (min-width: $grid-float-breakpoint) {
		border-radius: 0;
	}
}

.Navbar--fixed--top {
	z-index: $zindex-navbar-fixed;
	top: 0;
	border-width: 0 0 1px;
}

.Navbar--fixed--bottom {
	bottom: 0;
	margin-bottom: 0; /* override .Navbar defaults */
	border-width: 1px 0 0;
}


/* Brand/project name
   ========================================================================== */

.Navbar-brand {
	float: left;
	padding: $navbar-padding-vertical $navbar-padding-horizontal;
	font-size: $font-size-large;
	line-height: $line-height-computed;

	&:hover,
	&:focus {
		text-decoration: none;
	}

	> img {
		display: block;
	}


	@media (min-width: $grid-float-breakpoint) {
		.Navbar > .Container & {
			margin-left: -$navbar-padding-horizontal;
		}
	}
}


/* Navbar toggle
   ========================================================================== */
/**
 * Custom button for toggling the `.Navbar-collapse`, powered by the collapse
 * JavaScript plugin.
 */


.Navbar-toggle {
	position: relative;
	float: right;
	margin-right: $navbar-padding-horizontal;
	padding: 9px 10px;
	@include NavbarVerticalAlign(34px);
	background-color: transparent;
	background-image: none;
	border: 1px solid transparent;
	border-radius: $border-radius-base;

	/**
	 * We remove the `outline` here, but later compensate by attaching `:hover`
	 * styles to `:focus`.
	 */
	&:focus {
		outline: 0;
	}

	/* Bars */
	.Icon--bar {
		display: block;
		width: 22px;
		height: 2px;
		border-radius: 1px;
	}

	.Icon--bar + .Icon--bar {
		margin-top: 4px;
	}

	@media (min-width: $grid-float-breakpoint) {
		display: none;
	}
}


/* Navbar nav links
   ========================================================================== */
/**
 *	Builds on top of the `.Nav` components with it's own modifier class to make
 *	the nav the full height of the horizontal nav (above 768px).
 */

.Navbar-nav {
	margin: ($navbar-padding-vertical / 2) (-$navbar-padding-horizontal);

	> li > a {
		padding-top: 10px;
		padding-bottom: 10px;
		line-height: $line-height-computed;
	}

	@media (max-width: $screen--extraSmall-max) {
		/* Dropdowns get custom display when collapsed */
		.is-open .Dropdown-menu {
			position: static;
			float: none;
			width: auto;
			margin-top: 0;
			background-color: transparent;
			border: 0;
			box-shadow: none;

			> li > a,
			.Dropdown-header {
				padding: 5px 15px 5px 25px;
			}

			> li > a {
				line-height: $line-height-computed;
				&:hover,
				&:focus {
					background-image: none;
				}
			}
		}
	}

	/* Uncollapse the nav */
	@media (min-width: $grid-float-breakpoint) {
		float: left;
		margin: 0;

		> li {
			float: left;

			> a {
				padding-top: $navbar-padding-vertical;
				padding-bottom: $navbar-padding-vertical;
			}
		}
	}

}


/* Component alignment
   ========================================================================== */
/**
 * Repurpose the pull utilities as their own navbar utilities to avoid specifity
 * issues with parents and chaining. Only do this when the navbar is uncollapsed
 * though so that navbar contents properly stack and align in mobile.
 */

@media (min-width: $grid-float-breakpoint) {
	.Navbar--left {
		float: left;
	}

	.Navbar--right {
		float: right;
		margin-right: -$navbar-padding-horizontal;

		~ .Navbar--right {
			margin-right: 0;
		}
	}
}


/* Navbar form
   ========================================================================== */
/* Extension of the `.Form--inline` with some extra flavor for optimum display in our navbars. */

.Navbar-form {
	margin-left: -$navbar-padding-horizontal;
	margin-right: -$navbar-padding-horizontal;
	padding: 10px $navbar-padding-horizontal;
	border-top: 1px solid transparent;
	border-bottom: 1px solid transparent;
	box-shadow:
		inset 0 1px 0 rgba(255,255,255,.1),
		0 1px 0 rgba(255,255,255,.1)
	;

	/* Mixin behavior for optimum display */
	@extend .Form--inline;

	.Form-group {
		@media (max-width: $grid-float-breakpoint-max) {
			margin-bottom: 5px;
		}
	}

	/* Vertically center in expanded, horizontal navbar */
	@include NavbarVerticalAlign($input-height-base);

	/* Undo 100% width for pull classes */
	@media (min-width: $grid-float-breakpoint) {
		width: auto;
		border: 0;
		margin-left: 0;
		margin-right: 0;
		padding-top: 0;
		padding-bottom: 0;
		box-shadow: none;
	}
}



/* Dropdown menus
   ========================================================================== */

/* Menu position and menu carets */
.Navbar-nav > li > .Dropdown-menu {
	margin-top: 0;
	@include BorderTopRadius(0);
}
/* Menu position and menu caret support for dropups via extra dropup class */
.Navbar--fixed--bottom .Navbar-nav > li > .Dropdown-menu {
	@include BorderBottomRadius(0);
}

/* Right aligned menus need alt position */
.Navbar-nav.u-pull--right > li > .Dropdown-menu,
.Navbar-nav > li > .Dropdown-menu.u-pull--right {
	left: auto;
	right: 0;
}


/* Buttons in navbars
   ========================================================================== */
/* Vertically center a button within a navbar (when *not* in a form). */

.Navbar-button {
	@include NavbarVerticalAlign($input-height-base);

	&.Button--small {
	  @include NavbarVerticalAlign($input-height-small);
	}
	&.Button-extraSmall {
	  @include NavbarVerticalAlign(22);
	}
}


/* Text in navbars
   ========================================================================== */
/* Add a class to make any element properly align itself vertically within the navbars. */

.Navbar-text {
	@include NavbarVerticalAlign($line-height-computed);

	@media (min-width: $grid-float-breakpoint) {
		float: left;
		margin-left: $navbar-padding-horizontal;
		margin-right: $navbar-padding-horizontal;
	}
}

/* Alternate navbars
   ========================================================================== */

/* Default navbar */
.Navbar--default {
	background-color: $navbar-default-bg;
	border-color: $navbar-default-border;

	.Navbar-brand {
		color: $navbar-default-brand-color;

		&:hover,
		&:focus {
			color: $navbar-default-brand-hover-color;
			background-color: $navbar-default-brand-hover-bg;
		}
	}

	.Navbar-text {
		color: $navbar-default-color;
	}

	.Navbar-nav {
		> li > a {
			color: $navbar-default-link-color;

			&:hover,
			&:focus {
				color: $navbar-default-link-hover-color;
				background-color: $navbar-default-link-hover-bg;
			}
		}

		> .is-active > a {
			&,
			&:hover,
			&:focus {
				color: $navbar-default-link-active-color;
				background-color: $navbar-default-link-active-bg;
			}
		}

		> .is-disabled > a {
			&,
			&:hover,
			&:focus {
				color: $navbar-default-link-disabled-color;
				background-color: $navbar-default-link-disabled-bg;
			}
		}
	}

	.Navbar-toggle {
		border-color: $navbar-default-toggle-border-color;

		&:hover,
		&:focus {
			background-color: $navbar-default-toggle-hover-bg;
		}

		.Icon--bar {
			background-color: $navbar-default-toggle-icon-bar-bg;
		}
	}

	.Navbar-collapse,
	.Navbar-form {
		border-color: $navbar-default-border;
	}

	/* Dropdown menu items and carets */
	.Navbar-nav {

		/* Remove background color from open dropdown */
		> .is-open > a {
			&,
			&:hover,
			&:focus {
				background-color: $navbar-default-link-active-bg;
				color: $navbar-default-link-active-color;
			}
		}

		@media (max-width: $screen--extraSmall-max) {
			/* Dropdowns get custom display when collapsed */
			.is-open .Dropdown-menu {
				> li > a {
					color: $navbar-default-link-color;

					&:hover,
					&:focus {
						color: $navbar-default-link-hover-color;
						background-color: $navbar-default-link-hover-bg;
					}
				}

				> .is-active > a {
					&,
					&:hover,
					&:focus {
						color: $navbar-default-link-active-color;
						background-color: $navbar-default-link-active-bg;
					}
				}

				> .is-disabled > a {
					&,
					&:hover,
					&:focus {
						color: $navbar-default-link-disabled-color;
						background-color: $navbar-default-link-disabled-bg;
					}
				}
			}
		}
	}


	/**
	 * Links in navbars
	 * Add a class to ensure links outside the navbar nav are colored correctly.
	 */

	.Navbar-link {
		color: $navbar-default-link-color;

		&:hover {
			color: $navbar-default-link-hover-color;
		}
	}

	.Button-link {
		color: $navbar-default-link-color;
		&:hover,
		&:focus {
			color: $navbar-default-link-hover-color;
		}

		&[disabled],
		fieldset[disabled] & {
			&:hover,
			&:focus {
				color: $navbar-default-link-disabled-color;
			}
		}
	}

}

/* Inverse navbar
   ========================================================================== */
.Navbar--inverse {
	background-color: $navbar-inverse-bg;
	border-color: $navbar-inverse-border;

	.Navbar-brand {
		color: $navbar-inverse-brand-color;

		&:hover,
		&:focus {
			color: $navbar-inverse-brand-hover-color;
			background-color: $navbar-inverse-brand-hover-bg;
		}
	}

	.Navbar-text {
		color: $navbar-inverse-color;
	}

	.Navbar-nav {
		> li > a {
			color: $navbar-inverse-link-color;

			&:hover,
			&:focus {
				color: $navbar-inverse-link-hover-color;
				background-color: $navbar-inverse-link-hover-bg;
			}
		}

		> .is-active > a {
			&,
			&:hover,
			&:focus {
				color: $navbar-inverse-link-active-color;
				background-color: $navbar-inverse-link-active-bg;
			}
		}

		> .is-disabled > a {
			&,
			&:hover,
			&:focus {
				color: $navbar-inverse-link-disabled-color;
				background-color: $navbar-inverse-link-disabled-bg;
			}
		}
	}

	/* Darken the responsive nav toggle */
	.Navbar-toggle {
		border-color: $navbar-inverse-toggle-border-color;

		&:hover,
		&:focus {
			background-color: $navbar-inverse-toggle-hover-bg;
		}
		.Icon--bar {
			background-color: $navbar-inverse-toggle-icon-bar-bg;
		}
	}

	.Navbar-collapse,
	.Navbar-form {
		border-color: darken($navbar-inverse-bg, 7%);
	}

	/* Dropdowns */
	.Navbar-nav {
		> .is-open > a {
			&,
			&:hover,
			&:focus {
				background-color: $navbar-inverse-link-active-bg;
				color: $navbar-inverse-link-active-color;
			}
		}

		@media (max-width: $screen--extraSmall-max) {
			/* Dropdowns get custom display */
			.is-open .Dropdown-menu {
				> .Dropdown-header {
					border-color: $navbar-inverse-border;
				}

				> li > a {
					color: $navbar-inverse-link-color;
					&:hover,
					&:focus {
						color: $navbar-inverse-link-hover-color;
						background-color: $navbar-inverse-link-hover-bg;
					}
				}

				> .is-active > a {
					&,
					&:hover,
					&:focus {
						color: $navbar-inverse-link-active-color;
						background-color: $navbar-inverse-link-active-bg;
					}
				}

				> .is-disabled > a {
					&,
					&:hover,
					&:focus {
						color: $navbar-inverse-link-disabled-color;
						background-color: $navbar-inverse-link-disabled-bg;
					}
				}
			}
		}
	}

	.Navbar-link {
		color: $navbar-inverse-link-color;
		&:hover {
			color: $navbar-inverse-link-hover-color;
		}
	}

	.Button-link {
		color: $navbar-inverse-link-color;
		&:hover,
		&:focus {
			color: $navbar-inverse-link-hover-color;
		}

		&[disabled],
		fieldset[disabled] & {
			&:hover,
			&:focus {
				color: $navbar-inverse-link-disabled-color;
			}
		}
	}

}
